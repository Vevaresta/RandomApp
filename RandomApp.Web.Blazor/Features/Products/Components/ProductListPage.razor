@page "/products"
@using RandomApp.ProductManagement.Application.DataTransferObjects
@using RandomApp.Web.Client
@using RandomApp.Web.Client.Services
@using Microsoft.AspNetCore.Components.Web
@inject IProductDisplayService ProductDisplayService

<PageTitle>Products</PageTitle>

<div class="container-fluid d-flex justify-content-center bg-primary p-4 text-white">
    <h3>Products</h3>
</div>


<div class="container-fluid d-flex flex-wrap justify-content-between gap-2 p-4">

 
    @if (productDtos == null)
    {
        <p>Loading...</p>
    }
    else
    {
        @foreach (var productDto in productDtos)
        {

            <div class="card" style="width: 17rem;">

            <svg class="card-img-top" width="100%" height="180" xmlns="http://www.w3.org/2000/svg" role="img" aria-label="Placeholder" preserveAspectRatio="xMidYMid slice" focusable="false">
                    <title>Placeholder</title>
                    <rect width="100%" height="100%" fill="#868e96"></rect>
                </svg>
           

                    <div class="card-body d-flex flex-column justify-content-between">
                        
                        <div>
                            <h5 class="card-title">@productDto.Name</h5>
                            <p class="card-text">@productDto.ProductDescription</p>
                        </div>

                        <div class="mt-3 mb-2 d-flex justify-content-between">
                            <a href="/product/@productDto.Id" class="btn btn-primary">View Details</a>
                            <a href="#" class="btn btn-primary">Go to Home</a>

                        </div>
                    </div>
                </div>

        }

    }

</div>






@code {
    private IEnumerable<ProductDto> productDtos;

    protected override async Task OnInitializedAsync()
    {
        productDtos = await ProductDisplayService.GetProductsAsync();
    }
}